" ------------------------------------------------------------
" 1. Vundle
" ------------------------------------------------------------

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" vim-scripts repos
Plugin 'taglist.vim'
Plugin 'winmanager'
"Plugin 'minibufexpl.vim'
Plugin 'a.vim'
Plugin 'The-NERD-Commenter'

" original repos on github
Plugin 'scrooloose/nerdtree'
Plugin 'mhinz/vim-startify'
Plugin 'ntpeters/vim-better-whitespace'
"Plugin 'acusp/AuthorInfo'
Plugin 'acusp/vim-header'
Plugin 'Valloric/YouCompleteMe'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'Raimondi/delimitMate'
Plugin 'iamcco/markdown-preview.vim'
Plugin 'vim-syntastic/syntastic'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required


" ------------------------------------------------------------
" 2. format control
" ------------------------------------------------------------

syntax on
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set autoindent
set nu
set backup
set backupext=.bak
set backupdir=~/backup
set scrolloff=3
set laststatus=2
set hls
"set foldmethod=syntax


" themes
"
colo desert


" file encoding
"
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,utf-16,gbk,big5,gb18030,latin1
set fileencoding=utf-8


" gui font
"
if has("unix")
    set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 12
elseif has("win32") || has("win64")
    set guifont=DejaVu_Sans_Mono:h12
elseif has("gui_macvim")
    set guifont=DejaVu_Sans_Mono_for_Powerline:h12
end


" ------------------------------------------------------------
" 3. authorinfo
" ------------------------------------------------------------

"let g:vimrc_author='acusp'
"let g:vimrc_email='acusp.xu@gmail.com'
"let g:vimrc_homepage='http://acusp.info'

"nmap <F4> :AuthorInfoDetect<cr>

let g:header_field_author = 'acusp'
let g:header_field_author_email = 'acusp.xu@gmail.com'
let g:header_field_timestamp_format = '%c'

nmap <F4> :AddHeader<CR>


" ------------------------------------------------------------
" 4. plugin config
" ------------------------------------------------------------

" [ ctags ]
"
set tags=tags;
set autochdir


" [ cscope ]
"
if has("cscope")
    set csprg=/usr/bin/cscope
    set csto=0
    set cst
    set csverb
    set cspc=3
    "add any database in current dir
    if filereadable("cscope.out")
        cs add cscope.out
    "else search cscope.out elsewhere
    else
        let cscope_file=findfile("cscope.out",".;")
        let cscope_pre=matchstr(cscope_file,".*/")
        if !empty(cscope_file) && filereadable(cscope_file)
            exe "cs add" cscope_file cscope_pre
        endif
    endif
endif


" [ TagList ]
"
nnoremap <silent> <F8> :TlistToggle<CR>


" [ NERDTree ]
"
map <F9> :NERDTreeToggle<CR>


" [ A ]
"
nnoremap <silent> <F12> :A<CR>


" [ YouCompleteMe ]
"
let g:ycm_global_ycm_extra_conf='/home/acusp/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
let g:ycm_confirm_extra_conf=0
let g:ycm_min_num_of_chars_for_completion=2
let g:ycm_cache_omnifunc=0
let g:ycm_seed_identifiers_with_syntax=1
let g:ycm_complete_in_comments = 1
let g:ycm_complete_in_strings = 1
let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_collect_identifiers_from_comments_and_strings = 0
"
let g:ycm_show_diagnostics_ui = 0
let g:ycm_auto_trigger=0
"
" \y - turn off YCM; \Y - turn on YCM
nnoremap <leader>y :let g:ycm_auto_trigger=0<CR>
nnoremap <leader>Y :let g:ycm_auto_trigger=1<CR>
"
" python
let g:ycm_python_binary_path = 'python3'


" [ vim-airline ]
"
let g:airline_theme="luna"
let g:airline_powerline_fonts = 1
"
" tabline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 0
"
" whitespace
let g:airline#extensions#whitespace#enabled = 0
let g:airline#extensions#whitespace#symbol = '!'
"
" switch buffer
nnoremap <C-n> :bn<CR>
nnoremap <C-p> :bp<CR>
"
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
"
" powerline symbols
let g:airline_left_sep = ' '
let g:airline_left_alt_sep = ' '
let g:airline_right_sep = ' '
let g:airline_right_alt_sep = ' '
let g:airline_symbols.branch = ' '
let g:airline_symbols.readonly = ' '
let g:airline_symbols.linenr = ''


" [ delimitMate ]
"
" for python docstring
au FileType python let b:delimitMate_nesting_quotes = ['"']


" [ markdown-preview.vim ]
"
let g:mkdp_path_to_chrome = "firefox"


" [ Syntastic ]
"
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
"
" Pylint
let g:syntastic_python_checkers=['pylint']
g:syntastic_python_pylint_args='--disable=C0111,R0903,C0301'
